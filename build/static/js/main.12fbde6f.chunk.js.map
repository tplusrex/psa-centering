{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","firstValue","secondValue","Math","ceil","max","toFixed","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA+CeA,MA3Cf,WAAgB,IAAD,EACuBC,mBAAS,GADhC,mBACNC,EADM,aAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAMb,OANa,KAICC,KAAKC,MAAOD,KAAKE,IAAIJ,EAAYC,IAAcD,EAAaC,GAAgB,KAAKI,QAAQ,IAGrG,qBAAKC,UAAU,MAAf,SACE,4BCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.12fbde6f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport logo from './psa-logo.png';\nimport './App.css';\n\nfunction App() {\n  const [firstValue, setFirstValue] = useState(1);\n  const [secondValue, setSecondValue] = useState(1);\n\n  let percent = Math.ceil(((Math.max(firstValue, secondValue)/(firstValue + secondValue)) * 100).toFixed(2));\n\n  return (\n    <div className=\"App\">\n      <main>\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Centering Calculator\n          </p>\n        </header>\n        <form>\n          <label>\n            Side A <input type=\"number\" value={firstValue} onFocus={(e) => e.target.select()} onChange={e => e.target.value ? setFirstValue(parseInt(e.target.value)) : 0} />\n            <span className=\"percent\">{(firstValue/(firstValue + secondValue) * 100).toFixed(2)}&#37;</span>\n          </label>\n          <label>\n            Side B <input type=\"number\" value={secondValue} onFocus={(e) => e.target.select()} onChange={e => e.target.value ? setSecondValue(parseInt(e.target.value)): 0} />\n            <span className=\"percent\">{(secondValue/(firstValue + secondValue) * 100).toFixed(2)}&#37;</span>\n          </label>\n        </form>\n        <section>\n          <h3>Grade \n            <>\n              {percent >= 50 && percent <= 55 && <span>10</span>}\n              {percent >= 56 && percent <= 60 && <span>9</span>}\n              {percent >= 61 && percent <= 65 && <span>8</span>}\n              {percent >= 66 && percent <= 70 && <span>7</span>}\n              {percent >= 71 && percent <= 80 && <span>6</span>}\n              {percent >= 81 && percent <= 85 && <span>5</span>}\n              {percent > 85 && <span>4</span>}\n            </>\n          </h3>\n        </section> */}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}